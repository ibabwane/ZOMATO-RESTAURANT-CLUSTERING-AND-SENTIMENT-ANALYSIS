import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px


from google.colab import drive
drive.mount('/content/drive')

data1 = pd.read_csv('/content/drive/MyDrive/Data/Zomato Restaurant names and Metadata.csv')

data2 = pd.read_csv('/content/drive/MyDrive/Data/Zomato Restaurant reviews.csv')

data2 = pd.read_csv('/content/drive/MyDrive/Data/Zomato Restaurant reviews.csv')
df_name=data1.copy()


df_review=data2.copy()

df_name.head()

df_name.shape

df_name.describe()

df_name.info()

((df_name['Collections'].isnull().sum())/(len(df_name['Collections']))*100)

#calculatinh null value percent
na_percent={}
for col in list(df_name.columns):
  x= ((df_name[col].isnull().sum())/(len(df_name[col]))*100)
  na_percent[col] = x
print(na_percent)

# Dropping the 'Collections' feature
df_name.drop(columns = 'Collections',axis =1,inplace = True)

#fill null values for timing col

df_name.fillna(value = 0, axis = 0,inplace = True)

df_name.info()

df_name.head()

#check for Name
df_name['Name'][:5]

type(df_name['Name'])

df_name['Name'] = df_name['Name'].apply(lambda x:str(x))

df_name['Name'][:5]

#check for Links
df_name['Links'][:5]

type(df_name['Links'][0])

# 'Cost' feature
type(df_name['Cost'][0])

df_name['Cost'][0:5]

# 'Cost' feature
# Replacing ',' 
df_name['Cost'] = df_name['Cost'].str.replace(',','')

# Converting 'cost' feature to integer datatype
df_name['Cost'] = df_name['Cost'].apply(lambda x:int(x))

#check for Cuisines
print(df_name['Cuisines'][:5])
print(type(df_name['Cuisines'][0]))


def get_cuisines(x):
  return x.split(', ')

#check for Cuisines
df_name['Cuisines'] = df_name['Cuisines'].apply(lambda x : get_cuisines(x))


df_name['Cuisines'].nunique

type(df_name['Cuisines'][0])

#check for Timings
print(df_name['Timings'][:5])
print(type(df_name['Timings'][0]))

#Top 10 Cuisines

# Top 10 Cuisines
cluisine_list = {}
for names in df_name['Cuisines']:
    for name in names:
      if (name in cluisine_list):
        cluisine_list[name]+=1
      else:
         cluisine_list[name]=1
# Create a cuis dataframe
cuis_df = pd.DataFrame(cluisine_list.values(),index = cluisine_list.keys(), columns = {'Cuisine count in Restaurants'}).reset_index()

# Sort the dataframe in descending order
cuis_df.sort_values(by = 'Cuisine count in Restaurants',ascending = False,inplace = True)


# Visualization of Cuisines Count
plt.figure(figsize = (15, 8))
sns.set(font_scale = 2)
sns.barplot(data = cuis_df,x = cuis_df['index'],y = cuis_df['Cuisine count in Restaurants'])
plt.title('Cuisines Count',fontweight='bold')
plt.xticks(rotation = 90,fontsize = 18)
plt.yticks(fontsize = 18)
plt.show()

from wordcloud import WordCloud
from nltk.stem import PorterStemmer

# Most nominated words from 'Cuisine' feature
words_list = cluisine_list.keys()
strr = ' '
for i in words_list:
    strr=strr+i+' '
    
wordcloud = WordCloud(background_color='white',min_font_size = 1,colormap = 'Paired').generate(strr) 
wordcloud.to_image()

plt.figure(figsize=(10,5))
fig = plt.figure(figsize=(9, 6))
ax = fig.gca()
continous = df_name['Cost']
sns.distplot(df_name['Cost'], kde=True,ax=ax, color = 'g')
ax.axvline(continous.mean(), color='magenta', linestyle='dashed', linewidth=2)
ax.axvline(continous.median(), color='cyan', linestyle='dashed', linewidth=2)    
ax.set_title('Cost')
plt.show()


df_name.head()

avg_cost = pd.DataFrame(df_name.groupby(df_name['Name']).agg({'Cost':'mean'})).reset_index()
avg_cost.sort_values(by = 'Cost',ascending = False,inplace= True)
avg_cost.head()

# Visualization of Restaurant names and their respective cost
plt.figure(figsize = (20, 10))
sns.set(font_scale = 2)
sns.barplot(data = avg_cost,x = avg_cost['Name'],y = avg_cost['Cost'])
plt.title('Cost of Restaurants',fontweight='bold')
plt.xticks(rotation = 90,fontsize = 14)
plt.yticks(fontsize = 18)
plt.show()